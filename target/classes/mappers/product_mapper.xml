<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="spring.mvc.pj_sch.dao.ProductDAO">
  
  <!-- 상품목록 조회 -->
  <select id="getProductList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.ProductDTO">
  	SELECT *
	  FROM (
	        SELECT A.*, ROWNUM AS rn
	          FROM (SELECT *
	                  FROM products
	                 ORDER BY product_no DESC
	                ) A
	       )
	 WHERE rn BETWEEN #{start} AND #{end}
  </select>
  	
  <!-- 카테고리별 조회 -->
  <select id="getProductListCategory" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.ProductDTO">
  	SELECT *
	  FROM (
	        SELECT A.*, ROWNUM AS rn
	          FROM (SELECT *
	                  FROM products
	                 WHERE product_category=#{product_category}
	                 ORDER BY product_no DESC
	                ) A
	       )
	 WHERE rn BETWEEN #{start} AND #{end}
  </select>
  
  <!-- 검색한 상품 총 개수  -->
  <select id="getSearchTotal" parameterType="java.util.Map" resultType="Integer">
  	<if test="product_category == null or product_category == ''">
  	  	SELECT COUNT(*) total FROM Products
		 WHERE product_name LIKE '%' || #{keyword} || '%'
  	</if>
  	<if test="product_category != null and product_category != ''">
	  	 SELECT COUNT(*) total FROM Products
		  WHERE product_category=#{product_category}
		    AND product_name LIKE '%' || #{keyword} || '%'
  	</if>
  </select>
  
  <!-- 상품 검색 -->
  <select id="getSearchProductList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.ProductDTO">
  	<if test="product_category == null or product_category == ''">
  		SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (SELECT *
	                   	  FROM products
		 				 WHERE product_name LIKE '%' || #{keyword} || '%'
		                 ORDER BY product_no DESC
		                ) A
		        )
		  WHERE rn BETWEEN #{start} AND #{end}
  	</if>
  	<if test="product_category != null and product_category != ''">
  		SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (SELECT *
		                  FROM products
		                 WHERE product_category=#{product_category}
							  AND product_name LIKE '%' || #{keyword} || '%'
		                 ORDER BY product_no DESC
		                ) A
		       )
		 WHERE rn BETWEEN #{start} AND #{end}
  	</if>
  </select>
  
  <!-- 상품 상세 조회 -->
  <select id="getProductDetail" parameterType="Integer" resultType="spring.mvc.pj_sch.dto.ProductDTO">
  	SELECT *
  	  FROM products
  	 WHERE product_no = #{product_no}
  </select>
  
  <!-- 상품 등록 -->
  <insert id="addProduct" parameterType="spring.mvc.pj_sch.dto.ProductDTO">
  	INSERT INTO Products(product_no, product_name, product_price, product_amount, product_regist_day, product_img_name, product_category) 
	VALUES((SELECT NVL(MAX(product_no) + 1, 1) FROM Products), #{product_name}, #{product_price}, #{product_amount}, sysdate, #{product_img_name}, #{product_category})
  </insert>
  
  <!-- 상품 수정 -->
  <update id="updateProduct" parameterType="spring.mvc.pj_sch.dto.ProductDTO">
  	UPDATE products
  	   SET product_name=#{product_name}, product_price=#{product_price}, product_amount=#{product_amount}, product_img_name=#{product_img_name}, product_category=#{product_category}, product_state=#{product_state} WHERE product_no=#{product_no}
  </update>
  
  <!-- 상품 삭제 -->
  <delete id="deleteProduct" parameterType="Integer">
  	DELETE FROM products WHERE product_no=#{product_no}
  </delete>
  
  <!-- 재고 감소 -->
  <update id="minusStock" parameterType="java.util.Map">
  	UPDATE products 
  	   SET product_amount=#{product_amount} 
  	 WHERE product_no=#{product_no}
  </update>

  <!-- 재고 증가 -->
  <update id="plusStock" parameterType="java.util.Map">
  	UPDATE products SET product_amount=#{product_amount} WHERE product_no=#{product_no}
  </update>

  <!-- 상품 총 개수 -->
  <select id="getProductTotal" resultType="Integer">
  	SELECT COUNT(*) total FROM Products
  </select>
  
  </mapper>