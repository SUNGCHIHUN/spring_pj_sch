<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="spring.mvc.pj_sch.dao.OrderDAO">
  	
  	<!-- 전체 주문목록 조회 -->
  	<select id="getOrderList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.OrderDTO">
  		SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (
		                SELECT order_no, order_day, customer_id, product_no, product_img_name, product_name, order_amount, delivery_message, product_price, (product_price * order_amount) total, order_state
		                  FROM orders_view
		                 ORDER BY order_no DESC
		                ) A
		        )
		 WHERE rn BETWEEN #{start} AND #{end}
  	</select>
  	
  	<!-- 특정고객 주문조회 -->
  	<select id="getCustomerOrderList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.OrderDTO">
  		SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (
		                SELECT order_no, order_day, customer_id, product_no, product_img_name, product_name, order_amount, delivery_message, product_price, (product_price * order_amount) total, order_state
		                  FROM orders_view
		                 WHERE customer_id = #{customer_id}
		                 ORDER BY order_no DESC
		                ) A
		        )
		 WHERE rn BETWEEN #{start} AND #{end}
  	</select>
  	
  	<!-- 환불 총 개수 -->
  	<select id="getRefundTotal" resultType="Integer">
  		SELECT COUNT(*) total FROM orders WHERE order_state LIKE '환불' || '%'
  	</select>
  	
  	<!-- 주문 상태에 따른 환불목록 조회 -->
  	<select id="getRefundList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.OrderDTO">
  		SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (
		                SELECT order_no, order_day, customer_id, product_no, product_img_name, product_name, order_amount, delivery_message, product_price, (product_price * order_amount) total, order_state
		                  FROM orders_view
		                 WHERE order_state = #{order_state}
		 			 	    OR order_state LIKE '환불' || '%'
		                 ORDER BY order_no DESC
		                ) A
		        )
		  WHERE rn BETWEEN #{start} AND #{end}
  	</select>
  	
  	<!-- 바로구매 후 주문 등록 -->
  	<insert id="insertOrder" parameterType="spring.mvc.pj_sch.dto.OrderDTO">
  		INSERT INTO orders(order_no, customer_id, product_no, order_amount, zipcode, delivery_message, payment)
		 VALUES((SELECT NVL(MAX(order_no) + 1, 1) FROM orders), #{customer_id}, #{product_no}, #{order_amount}, #{zipcode}, #{delivery_message}, #{payment})
  	</insert>
  	
  	<!-- 장바구니 상품 전체 결제 후 주문 등록 -->
  	<insert id="insertCartOrder" parameterType="spring.mvc.pj_sch.dto.OrderDTO">
  		INSERT INTO orders(order_no, customer_id, product_no, order_amount, zipcode, delivery_message, payment)
		 VALUES((SELECT NVL(MAX(order_no) + 1, 1) FROM orders), #{customer_id}, #{product_no}, #{order_amount}, #{zipcode}, #{delivery_message}, #{payment})
  	</insert>
  	
  	<!-- 주문 상태변경 -->
  	<update id="updateState" parameterType="java.util.Map">
  		UPDATE orders SET order_state=#{order_state} WHERE order_no=#{order_no}
  	</update>
  	
  	<!-- 전체 주문 총 개수 -->
  	<select id="getOrderAllTotal" resultType="Integer">
  		SELECT COUNT(*) total FROM orders
  	</select>
  	
  	<!-- 주문 총 개수 -->
  	<select id="getOrderTotal" resultType="Integer">
  		SELECT COUNT(*) total FROM orders WHERE order_state LIKE '결제' || '%'
  	</select>
  	
  	<!-- 고객 주문 총 개수 -->
  	<select id="getCustomerOrderTotal" resultType="Integer">
  		SELECT COUNT(*) total FROM orders WHERE customer_id=#{customer_id}
  	</select>
  	
  </mapper>