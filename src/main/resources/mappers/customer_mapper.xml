<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="spring.mvc.pj_sch.dao.CustomerDAO">
  
	  <!-- 아이디 중복 확인 -->
	  <select id="confirmId" parameterType="String" resultType="Integer">
	  	SELECT COUNT(*) FROM Customers
	  	 WHERE customer_id = #{strId}
	  </select>
	  
	  <!-- 우편번호 정보 저장 -->
	  <insert id="addZipcode" parameterType="spring.mvc.pj_sch.dto.ZipcodeDTO">
	  	INSERT INTO Zipcode_tbl(zipcode, sido, gugum, dong, bunji, detail_address)
		 VALUES(#{zipcode}, #{sido}, #{gugum}, #{dong}, #{bunji}, #{detail_address, jdbcType=VARCHAR})
	  </insert>
	  
	  <!-- 회원정보 등록 -->
	  <insert id="addCustomer" parameterType="spring.mvc.pj_sch.dto.CustomerDTO">
	  	INSERT INTO Customers(customer_id, customer_password, customer_name, zipcode, customer_address, customer_tel, customer_email, key) 
		 VALUES(#{customer_id}, #{customer_password}, #{customer_name}, #{zipcode}, #{customer_address}, #{customer_tel}, #{customer_email}, #{key})
	  </insert>
	  
	  <!-- 아이디, 비밀번호 체크 -->
	 <!--  <select id="idPasswordCheck" parameterType="java.util.Map" resultType="Integer">
	  	SELECT COUNT(*) FROM Customers 
	  	 WHERE customer_id = #{customer_id}
	  	   AND customer_password = #{customer_password}
	  	   AND customer_state = 'register'
	  </select> -->
	  
	  <!-- 회원정보 수정 -->
	  <update id="updateCustomer" parameterType="spring.mvc.pj_sch.dto.CustomerDTO">
	  	UPDATE Customers
		   SET customer_password=#{customer_password}, customer_name=#{customer_name}, zipcode=#{zipcode}, customer_address=#{customer_address}, customer_tel=#{customer_tel}, customer_email=#{customer_email}
		 WHERE customer_id=#{customer_id}
	  </update>
	  
	  <!-- 우편번호 조회 -->
	  <select id="getAddress" parameterType="String" resultType="spring.mvc.pj_sch.dto.ZipcodeDTO">
	  	SELECT * FROM Zipcode_tbl
		 WHERE zipcode = #{zipcode}
	  </select>
	  
	  <!-- 회원정보 조회 -->
	  <select id="getCustomerDetail" parameterType="String" resultType="spring.mvc.pj_sch.dto.CustomerDTO">
	  	SELECT * FROM Customers
		 WHERE customer_id = #{customer_id}
	  </select>
	  
	  <!-- 회원정보 삭제 -->
	  <update id="deleteCustomer" parameterType="String">
	  	UPDATE Customers
	  	   SET customer_delete_day=sysdate, customer_state='unregister'
	  	 WHERE customer_id=#{customer_id}
	  </update>
	  
	  <!-- 회원 우편번호 가져오기 -->
	  <select id="getCustomerZipcode" resultType="String">
	  	SELECT zipcode FROM customers WHERE customer_id=#{customer_id}
	  </select>
	  
	  <!-- 주소 정보 가져오기 -->
	  <select id="getZipcodeInfo" parameterType="String" resultType="spring.mvc.pj_sch.dto.ZipcodeDTO">
	  	SELECT * FROM zipcode_tbl
	  	 WHERE zipcode = #{zipcode}
	  </select>
	  
	  <!-- 회원정보 전체 조회 -->
	  <select id="getCustomerList" parameterType="java.util.Map" resultType="spring.mvc.pj_sch.dto.CustomerDTO">
	  	SELECT *
		  FROM (
		        SELECT A.*, ROWNUM AS rn
		          FROM (
		                SELECT customer_id, customer_name, zipcode, customer_address, customer_tel, customer_email, customer_regist_day, customer_delete_day, customer_state
		                  FROM customers
		                 ORDER BY customer_regist_day DESC
		                ) A
		        )
		 WHERE rn BETWEEN #{start} AND #{end}
	  </select>
	  
	  <!-- 전체 회원 수 -->
	  <select id="getCustomerTotal" resultType="Integer">
	  	SELECT COUNT(*) total FROM customers
	  </select>
	  
	  <!-- 관리자 아이디, 비밀번호 확인 -->
	  <select id="adminCheck" parameterType="java.util.Map" resultType="Integer">
	  	SELECT COUNT(*) 
	  	  FROM Host 
	  	 WHERE host_id = #{strId} 
	  	   AND host_password = #{strPassword}
	  </select>
	  
	  <!-- 시큐리티 - 권한 가져오기 -->
	  <select id="getAuthority" parameterType="String" resultType="String">
	  	SELECT authority 
	  	  FROM customers 
	  	 WHERE customer_id = #{customer_id}
	  </select>
	  
	  <!-- 시큐리티 - 비밀번호 가져오기 -->
	  <select id="getPassword" parameterType="String" resultType="String">
	  	SELECT customer_password 
	  	  FROM customers 
	  	 WHERE customer_id = #{customer_id}
	  </select>
	  
	  <!-- 시큐리티 - 이메일 인증 key값 확인 -->
	  <select id="getKey" parameterType="String" resultType="Integer">
	  	SELECT COUNT(*)
	  	  FROM customers 
	  	 WHERE key = #{key}
	  </select>
	  
	  <!-- 시큐리티 - 이메일 인증에 성공한 경우 enabled 1로 변경 -->
	  <update id="updateGrade" parameterType="String">
	  	UPDATE customers
	  	   SET enabled = 1
	  	 WHERE key = #{key}
	  </update>
	  
	  <!-- 시큐리티 - 회원 이름 가져오기 -->
	  <select id="getCustomerName" parameterType="String" resultType="String">
	  	SELECT customer_name
	  	  FROM customers
	  	 WHERE customer_id = #{customer_id}
	  </select>
  </mapper>